{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACuD;;AAEvD;AACA;AACA;AACA;AACA;AACmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AAC+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBe,SAASK,cAAcA,CAAE;EAAEC,IAAI;EAAEC;AAAU,CAAC,EAAG;EAC7D;AACD;AACA;AACA;EACC,MAAMC,YAAY,GAAGP,0DAAM,CAAE,IAAK,CAAC;;EAEnC;AACD;AACA;AACA;AACA;AACA;EACC,MAAMQ,UAAU,GAAGP,iEAAa,CAAEG,cAAe,CAAC;;EAElD;EACAL,6DAAS,CAAE,MAAM;IAChB;IACA,IAAK,CAAEM,IAAI,IAAI,CAAEE,YAAY,CAACE,OAAO,EAAG;MACvC;IACD;;IAEA;IACAF,YAAY,CAACE,OAAO,CAACC,SAAS,GAAG,EAAE;;IAEnC;IACA,MAAMC,QAAQ,GAAG,mBAAoBH,UAAU,EAAG;;IAElD;IACAI,MAAM,CAACC,OAAO,CACZC,MAAM,CAAEH,QAAQ,EAAEN,IAAK,CAAC,CACxBU,IAAI,CAAE,CAAE;MAAEC;IAAI,CAAC,KAAM;MACrB;MACAT,YAAY,CAACE,OAAO,CAACC,SAAS,GAAGM,GAAG;IACrC,CAAE,CAAC,CACFC,KAAK,CAAIC,KAAK,IAAM;MACpB;MACA;MACAC,OAAO,CAACD,KAAK,CAAE,2BAA2B,EAAEA,KAAM,CAAC;;MAEnD;MACAX,YAAY,CAACE,OAAO,CAACC,SAAS,GAAG,+BAA+B;IACjE,CAAE,CAAC;EACL,CAAC,EAAE,CAAEL,IAAI,EAAEG,UAAU,CAAG,CAAC;EAEzB,oBACCL,sDAAA;IACC;IACAiB,GAAG,EAAGb,YAAc;IACpBD,SAAS,EAAG,qBAAsBA,SAAS,IAAI,EAAE;EAAK,CACtD,CAAC;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACuB;;AAEvB;AACA;AACA;AACA;AACA;AACuD;;AAEvD;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACuD;;AAEvD;AACA;AACA;AACA;AAC0D;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAae,SAASqB,IAAIA,CAAE;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAG;EAC7D;AACD;AACA;AACA;AACA;EACC,MAAM;IAAExB;EAAK,CAAC,GAAGuB,UAAU;;EAE3B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,CAAEE,UAAU,EAAEC,aAAa,EAAEC,cAAc,CAAE,GAAGT,qEAAiB,CACtElB,IAAI,IAAI,EACT,CAAC;;EAED;AACD;AACA;AACA;EACCN,6DAAS,CAAE,MAAM;IAChBgC,aAAa,CAAE1B,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,EAAG,CAAC;EAC5B,CAAC,EAAE,CAAEA,IAAI,EAAE0B,aAAa,CAAG,CAAC;;EAE5B;AACD;AACA;AACA;EACC,MAAME,gBAAgB,GAAGjC,0DAAM,CAAE6B,aAAc,CAAC;EAChD,MAAMK,OAAO,GAAGlC,0DAAM,CAAEK,IAAK,CAAC;;EAE9B;EACAN,6DAAS,CAAE,MAAM;IAChBkC,gBAAgB,CAACxB,OAAO,GAAGoB,aAAa;IACxCK,OAAO,CAACzB,OAAO,GAAGJ,IAAI;EACvB,CAAC,EAAE,CAAEwB,aAAa,EAAExB,IAAI,CAAG,CAAC;;EAE5B;AACD;AACA;AACA;AACA;EACCN,6DAAS,CAAE,MAAM;IAChB,IAAKiC,cAAc,KAAKE,OAAO,CAACzB,OAAO,EAAG;MACzCwB,gBAAgB,CAACxB,OAAO,CAAE;QAAEJ,IAAI,EAAE2B;MAAe,CAAE,CAAC;IACrD;EACD,CAAC,EAAE,CAAEA,cAAc,CAAG,CAAC;EAEvB,oBACCN,uDAAA;IAAA,GAAUJ,sEAAa,CAAC,CAAC;IAAAa,QAAA,gBAExBhC,sDAAA,CAACqB,kEAAe;MACfY,KAAK,EAAGf,mDAAE,CAAE,cAAc,EAAE,gBAAiB,CAAG;MAChDgB,IAAI,EAAGhB,mDAAE,CACR,iCAAiC,EACjC,gBACD,CAAG;MACHiB,WAAW,EAAGjB,mDAAE,CACf,iCAAiC,EACjC,gBACD,CAAG;MACHkB,KAAK,EAAGT,UAAY;MACpBU,QAAQ,EAAGT,aAAe;MAC1BU,uBAAuB;IAAA,CACvB,CAAC,eAEFtC,sDAAA;MAAKuC,KAAK,EAAG;QAAEC,SAAS,EAAE;MAAO,CAAG;MAAAR,QAAA,eACnChC,sDAAA,CAACC,mEAAc;QAACC,IAAI,EAAG2B;MAAgB,CAAE;IAAC,CACtC,CAAC;EAAA,CACF,CAAC;AAER;;;;;;;;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAY,oEAAiB,CAAEE,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAErB,6CAAI;EAEV;AACD;AACA;EACCkB,IAAIA,+CAAAA;AACL,CAAE,CAAC;;;;;;;;;;;;;;;;;;ACtCH;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASe,SAASA,IAAIA,CAAA,EAAG;EAC9B,oBACC1C,sDAAA;IAAA,GAAQmB,kEAAa,CAACuB,IAAI,CAAC,CAAC;IAAAV,QAAA,EACzB;EAAgD,CAChD,CAAC;AAEN;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAC4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASe,iBAAiBA,CAAA,EAAG;EACnC,IAAI;IACH;IACA,IAAK,OAAOtC,MAAM,CAACC,OAAO,KAAK,WAAW,EAAG;MAC5C;MACA;IACD;;IAEA;IACA,IAAK,CAAED,MAAM,CAACC,OAAO,CAACsC,aAAa,EAAG;MACrC;MACAvC,MAAM,CAACC,OAAO,CAACuC,UAAU,CAAE;QAC1BC,WAAW,EAAE,KAAK,CAAE;MACrB,CAAE,CAAC;;MAEH;MACAzC,MAAM,CAACC,OAAO,CAACsC,aAAa,GAAG,IAAI;IACpC;EACD,CAAC,CAAC,OAAQjC,KAAK,EAAG;IACjB;IACA;IACAC,OAAO,CAACD,KAAK,CAAE,yCAAyC,EAAEA,KAAM,CAAC;EAClE;AACD;;AAEA;AACA;AACA;AACA;AACA+B,2DAAQ,CAAE,MAAM;EACfC,iBAAiB,CAAC,CAAC;AACpB,CAAE,CAAC;;;;;;;;;;;ACjDH;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://mermaid-blocks/./src/components/mermaid-diagram.js","webpack://mermaid-blocks/./src/edit.js","webpack://mermaid-blocks/./src/index.js","webpack://mermaid-blocks/./src/save.js","webpack://mermaid-blocks/./src/utils/mermaid-init.js","webpack://mermaid-blocks/./src/editor.scss","webpack://mermaid-blocks/./src/style.scss","webpack://mermaid-blocks/external window \"ReactJSXRuntime\"","webpack://mermaid-blocks/external window [\"wp\",\"blockEditor\"]","webpack://mermaid-blocks/external window [\"wp\",\"blocks\"]","webpack://mermaid-blocks/external window [\"wp\",\"components\"]","webpack://mermaid-blocks/external window [\"wp\",\"compose\"]","webpack://mermaid-blocks/external window [\"wp\",\"domReady\"]","webpack://mermaid-blocks/external window [\"wp\",\"element\"]","webpack://mermaid-blocks/external window [\"wp\",\"i18n\"]","webpack://mermaid-blocks/webpack/bootstrap","webpack://mermaid-blocks/webpack/runtime/chunk loaded","webpack://mermaid-blocks/webpack/runtime/compat get default export","webpack://mermaid-blocks/webpack/runtime/define property getters","webpack://mermaid-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://mermaid-blocks/webpack/runtime/make namespace object","webpack://mermaid-blocks/webpack/runtime/jsonp chunk loading","webpack://mermaid-blocks/webpack/before-startup","webpack://mermaid-blocks/webpack/startup","webpack://mermaid-blocks/webpack/after-startup"],"sourcesContent":["/**\n * React hooks and utilities.\n *\n * @see https://react.dev/reference/react\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-element/\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Hook to generate a unique ID for each component instance.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-compose/#useinstanceid\n */\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Initializes MermaidJS globally.\n * Ensures Mermaid is properly set up for rendering diagrams.\n *\n * @see https://mermaid-js.github.io/mermaid/#/Setup\n */\nimport '../utils/mermaid-init';\n\n/**\n * Mermaid Diagram Component\n * Renders MermaidJS diagrams inside a container using the global Mermaid.js object.\n *\n * This component receives MermaidJS code and renders the corresponding diagram.\n * If the MermaidJS code is invalid, it gracefully handles the error and displays\n * a fallback message.\n *\n * @param {Object} props             The component props.\n * @param {string} props.code        MermaidJS code to render.\n * @param {string} [props.className] Additional class names for styling the container.\n *\n * @return {JSX.Element} The rendered Mermaid diagram or an error fallback.\n *\n * @see https://mermaid-js.github.io/mermaid/#/\n */\nexport default function MermaidDiagram( { code, className } ) {\n\t/**\n\t * Ref to the container element where the Mermaid diagram will be rendered.\n\t * This allows direct manipulation of the DOM element for Mermaid's SVG output.\n\t */\n\tconst containerRef = useRef( null );\n\n\t/**\n\t * A unique ID for the current component instance.\n\t * Used as the `renderId` to distinguish diagrams.\n\t *\n\t * @type {string}\n\t */\n\tconst instanceId = useInstanceId( MermaidDiagram );\n\n\t// Effect to render the Mermaid diagram whenever the code or instanceId changes.\n\tuseEffect( () => {\n\t\t// Ensure MermaidJS code and container are available before rendering\n\t\tif ( ! code || ! containerRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear the container before rendering a new diagram\n\t\tcontainerRef.current.innerHTML = '';\n\n\t\t// Generate a unique ID for this rendering session\n\t\tconst renderId = `mermaid-diagram-${ instanceId }`;\n\n\t\t// Attempt to render the Mermaid diagram\n\t\twindow.mermaid\n\t\t\t.render( renderId, code )\n\t\t\t.then( ( { svg } ) => {\n\t\t\t\t// Insert the rendered SVG into the container\n\t\t\t\tcontainerRef.current.innerHTML = svg;\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\t// Log the error to the console for debugging\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error( 'Mermaid rendering failed:', error );\n\n\t\t\t\t// Display a fallback message for invalid Mermaid syntax\n\t\t\t\tcontainerRef.current.innerHTML = `<p>Invalid Mermaid syntax</p>`;\n\t\t\t} );\n\t}, [ code, instanceId ] );\n\n\treturn (\n\t\t<div\n\t\t\t// Attach the container ref and apply additional class names if provided\n\t\t\tref={ containerRef }\n\t\t\tclassName={ `mermaid-container ${ className || '' }` }\n\t\t/>\n\t);\n}\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook used to mark the block wrapper element. It provides necessary props\n * such as class names, styles, and more.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Processes CSS, SASS, or SCSS files referenced in JavaScript files.\n * This file contains styles applied to the editor interface for this block.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * Debounce hook to delay the handling of input changes, reducing frequent updates.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-compose/#usedebouncedinput\n */\nimport { useDebouncedInput } from '@wordpress/compose';\n\n/**\n * A textarea control component for input fields with WordPress UI consistency.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/textareacontrol/\n */\nimport { TextareaControl } from '@wordpress/components';\n\n/**\n * React hooks for lifecycle events and mutable values.\n *\n * @see https://react.dev/reference/react/useEffect\n * @see https://react.dev/reference/react/useRef\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Component for rendering a Mermaid diagram. This is a custom React component\n * built to render MermaidJS diagrams in WordPress blocks.\n */\nimport MermaidDiagram from './components/mermaid-diagram';\n\n/**\n * Edit function for the block. This is the interface that will appear in the\n * WordPress editor when the block is used. It allows users to input MermaidJS\n * code and provides a live preview of the diagram.\n *\n * @param {Object}   props               The block properties.\n * @param {Object}   props.attributes    The attributes for the block.\n * @param {Function} props.setAttributes The function to update block attributes.\n *\n * @return {Element} The rendered block editor interface.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n */\nexport default function Edit( { attributes, setAttributes } ) {\n\t/**\n\t * Destructure the `code` attribute from the block attributes.\n\t *\n\t * @type {string} code - The MermaidJS code for the diagram.\n\t */\n\tconst { code } = attributes;\n\n\t/**\n\t * Debounced input handling for the MermaidJS code.\n\t * - `inputValue`: The current value of the input field.\n\t * - `setInputValue`: The setter function for the input field value.\n\t * - `debouncedValue`: The debounced version of `inputValue`, updated after\n\t *   a short delay to reduce frequent updates.\n\t */\n\tconst [ inputValue, setInputValue, debouncedValue ] = useDebouncedInput(\n\t\tcode || ''\n\t);\n\n\t/**\n\t * Synchronize the input value with the `code` attribute. If the `code`\n\t * attribute changes externally (e.g., via undo/redo), update the input value.\n\t */\n\tuseEffect( () => {\n\t\tsetInputValue( code ?? '' );\n\t}, [ code, setInputValue ] );\n\n\t/**\n\t * Mutable references to `setAttributes` and `code` to avoid stale closures\n\t * in subsequent `useEffect` calls.\n\t */\n\tconst setAttributesRef = useRef( setAttributes );\n\tconst codeRef = useRef( code );\n\n\t// Keep references up-to-date with the latest values.\n\tuseEffect( () => {\n\t\tsetAttributesRef.current = setAttributes;\n\t\tcodeRef.current = code;\n\t}, [ setAttributes, code ] );\n\n\t/**\n\t * Update the `code` attribute when the debounced input value changes.\n\t * This ensures that the block attribute is updated only after the user has\n\t * stopped typing for a short period.\n\t */\n\tuseEffect( () => {\n\t\tif ( debouncedValue !== codeRef.current ) {\n\t\t\tsetAttributesRef.current( { code: debouncedValue } );\n\t\t}\n\t}, [ debouncedValue ] );\n\n\treturn (\n\t\t<div { ...useBlockProps() }>\n\t\t\t{ /* Textarea for entering MermaidJS code */ }\n\t\t\t<TextareaControl\n\t\t\t\tlabel={ __( 'Mermaid Code', 'mermaid-blocks' ) }\n\t\t\t\thelp={ __(\n\t\t\t\t\t'Write your MermaidJS code here…',\n\t\t\t\t\t'mermaid-blocks'\n\t\t\t\t) }\n\t\t\t\tplaceholder={ __(\n\t\t\t\t\t'Write your MermaidJS code here…',\n\t\t\t\t\t'mermaid-blocks'\n\t\t\t\t) }\n\t\t\t\tvalue={ inputValue }\n\t\t\t\tonChange={ setInputValue }\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t/>\n\t\t\t{ /* Display the live preview of the Mermaid diagram */ }\n\t\t\t<div style={ { marginTop: '20px' } }>\n\t\t\t\t<MermaidDiagram code={ debouncedValue } />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save() {\n\treturn (\n\t\t<p { ...useBlockProps.save() }>\n\t\t\t{ 'Mermaid Blocks – hello from the saved content!' }\n\t\t</p>\n\t);\n}\n","/**\n * DOM Ready utility for WordPress.\n * Ensures the provided callback runs once the DOM is fully loaded.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-dom-ready/\n */\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Initializes Mermaid.js globally.\n *\n * This function ensures that Mermaid.js is initialized only once during the\n * lifetime of the application. If Mermaid.js is not available on the global\n * `window` object, it silently exits. A custom `isInitialized` flag is used to\n * prevent redundant initializations.\n *\n * @see https://mermaid-js.github.io/mermaid/#/Setup\n */\nexport function initializeMermaid() {\n\ttry {\n\t\t// Check if Mermaid.js is loaded globally\n\t\tif ( typeof window.mermaid === 'undefined' ) {\n\t\t\t// Mermaid.js is not loaded, silently exit\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if Mermaid has already been initialized\n\t\tif ( ! window.mermaid.isInitialized ) {\n\t\t\t// Initialize Mermaid.js with default options\n\t\t\twindow.mermaid.initialize( {\n\t\t\t\tstartOnLoad: false, // Disable auto-rendering on page load\n\t\t\t} );\n\n\t\t\t// Mark Mermaid as initialized to avoid re-initialization\n\t\t\twindow.mermaid.isInitialized = true;\n\t\t}\n\t} catch ( error ) {\n\t\t// Log the error to the console for debugging\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'Error during Mermaid.js initialization:', error );\n\t}\n}\n\n/**\n * Executes Mermaid.js initialization when the DOM is fully loaded.\n * This ensures that Mermaid is set up after all elements in the DOM are available.\n */\ndomReady( () => {\n\tinitializeMermaid();\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkmermaid_blocks\"] = globalThis[\"webpackChunkmermaid_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useEffect","useRef","useInstanceId","jsx","_jsx","MermaidDiagram","code","className","containerRef","instanceId","current","innerHTML","renderId","window","mermaid","render","then","svg","catch","error","console","ref","__","useBlockProps","useDebouncedInput","TextareaControl","jsxs","_jsxs","Edit","attributes","setAttributes","inputValue","setInputValue","debouncedValue","setAttributesRef","codeRef","children","label","help","placeholder","value","onChange","__nextHasNoMarginBottom","style","marginTop","registerBlockType","save","metadata","name","edit","domReady","initializeMermaid","isInitialized","initialize","startOnLoad"],"sourceRoot":""}